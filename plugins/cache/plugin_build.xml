<?xml version="1.0"?>
<!--
    This is an Apache Ant build file to build the Cache plugin
    for distribution.
-->
<project name="plugin-cache" default="build" basedir=".">
    <target name="init">
        <tstamp/>
        <property name="internal_name" value="cache"/>
        <property name="version" value="0.11"/>

        <property name="debug" value="on"/>
        <property name="optimize" value="off"/>
        <property name="deprecation" value="on"/>
        <property name="targetVM" value="1.6"/>

        <!-- adapt these lines to your need -->
       <!--
        <property name="p_plugin.work_dir" value="/home/gerd/work/java/squirrel1_2/squirrel-sql-dist/squirrel-sql/cache"/>
        <property name="p_plugin.core_libs_dir" value="/home/gerd/work/java/squirrel1_2/squirrel-sql-dist/squirrel-sql/core/dist/lib"/>
        <property name="p_plugin.dist_dir" value="/home/gerd/work/java/squirrel1_2/squirrel-sql-dist/squirrel-sql/core/dist/plugins"/>
        -->
        <echo message="---------------- ${internal_name} ${version} ----------------"/>
        
        <property environment="env"/>
    </target>

   <target name="initdirs" unless="p_plugin.work_dir">
       <property name="dist_dir" value="../../../squirrel-sql-dist/squirrel-sql"/>
       <property name="plugins_dist_dir" value="${dist_dir}/plugins"/>
       <property name="p_plugin.work_dir" value="${plugins_dist_dir}/${internal_name}/work"/>
       <property name="p_plugin.core_libs_dir" value="${dist_dir}/core/dist/lib"/>
       <property name="p_plugin.dist_dir" value="${dist_dir}/core/dist/plugins"/>
   </target>


    <!--
    ==================================================================
    Compile the plugin.
    No parameters.
    ==================================================================
    -->
    <target name="build" depends="init, initdirs">
        <property name="obj_dir" value="${p_plugin.work_dir}/obj"/>
        
        <mkdir dir="${obj_dir}"/>


        <javac  srcdir="src"
                destdir="${obj_dir}"
                deprecation="${deprecation}"
                debug="${debug}"
                optimize="${optimize}"
                includeJavaRuntime="yes"
                source="${targetVM}"
                target="${targetVM}">
            <classpath>
               <fileset dir="lib">
                  <include name="**/*.*"/>
               </fileset>
                <fileset dir="${p_plugin.core_libs_dir}">
                    <include name="**/*.*"/>
                </fileset>
            </classpath>
        </javac>
        <copy todir="${obj_dir}" >
            <fileset dir="src" >
                <include name="**/*.gif"/>
                <include name="**/*.jpg"/>
                <include name="**/*.jpeg"/>
                <include name="**/*.xml"/>
					<include name="**/*.xsl"/>
                <include name="**/*.properties"/>
            </fileset>
        </copy>

        <jar jarfile="${p_plugin.dist_dir}/${internal_name}.jar" compress="false">
            <fileset dir="${obj_dir}">
                <include name="**/*.*"/>
            </fileset>
        </jar>

		<copy todir="${p_plugin.dist_dir}/${internal_name}" >
			<fileset dir="doc" >
				<include name="*.*"/>
			</fileset>
		</copy>


       <!--**********************************************************************-->
       <!-- What happens here sure is filthy because we copy plugin stuff to     -->
       <!-- the core applications lib dir. It is necesary though since Cache     -->
       <!-- uses the class loader.-->


       <copy todir="${p_plugin.core_libs_dir}" >
          <fileset dir="lib" >
             <include name="*.*"/>
          </fileset>
       </copy>

       <copy todir="${p_plugin.core_libs_dir}" >
          <fileset dir="${p_plugin.dist_dir}" >
             <include name="${internal_name}.jar"/>
          </fileset>
       </copy>

       <!--                                                                      -->
       <!--**********************************************************************-->

        <jar jarfile="${p_plugin.dist_dir}/${internal_name}/src.jar" compress="false">
            <fileset dir=".">
                <include name="src/**/*.*"/>
                <include name="plugin_build.xml"/>
            </fileset>
        </jar>
    </target>

</project>

