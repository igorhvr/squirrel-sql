<?xml version="1.0"?>

<!--
	This is an Apache Ant build file for Squirrel SQL Client.
-->
<project name="Squirrel-SQL-Client" default="help" basedir="../">
	<!--
	===================================================================
	Initialization target
	No parameters.
	===================================================================
	-->
	<target name="init">
		<tstamp/>
		<property name="name" value="squirrel-sql"/>
		<property name="version" value="1.2beta1"/>

		<property name="dist_dir" value="${basedir}/../squirrel-sql-dist/${name}-${version}"/>
		<property name="core_dist_dir" value="${dist_dir}/core/dist"/>
		<property name="core_work_dir" value="${dist_dir}/core/work"/>
		<property name="core_obj_dir" value="${core_work_dir}/obj"/>
		<property name="core_dist_lib_dir" value="${core_dist_dir}/lib"/>
		<property name="core_dist_doc_dir" value="${core_dist_dir}/doc"/>
		<property name="core_jws_dir" value="${dist_dir}/core/jws"/>
		<property name="plugins_src_dir" value="${basedir}/plugins"/>
		<property name="plugins_dist_dir" value="${dist_dir}/plugins"/>

		<property name="plugin_build_file_name" value="plugin_build.xml"/>
		<property name="plugin_build_target_name" value="build"/>

		<property name="debug" value="on"/>
		<property name="optimize" value="off"/>
		<property name="deprecation" value="on"/>
		
		<property environment="env"/>
		<echo message="ANT HOME: ${env.ANT_HOME}"/>
		<echo message="JAVA HOME: ${env.JAVA_HOME}"/>
	</target>

	<!--
	==================================================================
	Help on command usage.
	No parameters.
	==================================================================
	-->
	<target name="help" depends="init">
		<echo message=""/>
		<echo message="${name} ${version} Build tool"/>
		<echo message="-------------------------------------------------------"/>
		<echo message=" Usage:"/>
		<echo message="   build &lt;target&gt;"/>
		<echo message=""/>
		<echo message=" Available targets are:"/>
		<echo message=""/>
		<echo message="	compile_fw:   Compiles the base framework classes to:"/>
		<echo message="				  ${core_obj_dir}"/>
		<echo message=""/>
		<echo message="	compile_app:  Compiles the SQuirreL client app to:"/>
		<echo message="				  ${core_obj_dir}"/>
		<echo message="				  after building compile_fw."/>
		<echo message=""/>
		<echo message="	compile_plugins: Compiles all plugins to:"/>
		<echo message="					 ${plugins_dist_dir}"/>
		<echo message="					 after building compile_app."/>
		<echo message=""/>
		<echo message="	jar_source: Jars the source for the framework and application to:"/>
		<echo message="					 ${core_dist_dir}/src}"/>
		<echo message=""/>
		<echo message=" javadoc: Compiles the javadoc from the app/ and fw/ sources."/>
		<echo message=""/>
		<echo message="	make_dist:  Executes jar_source."/>
		<echo message="				Eventually this should run an Ant Task to generate the IzPack JAR."/>
		<echo message=""/>
		<echo message=" make_jws:   Creates Java WebStart version."/>
		<echo message=""/>
		<echo message="	clean:  Removes class files, old versions of source etc."/>
		<echo message="--------------------------------------------------------"/>
		<echo message=""/>
	</target>
		
	<!--
	==================================================================
	Setup
	==================================================================
	-->
	<target name="setup" depends="init">
		<mkdir dir="${core_obj_dir}"/>
		<mkdir dir="${core_jws_dir}"/>
		<mkdir dir="${core_dist_lib_dir}"/>
		<mkdir dir="${core_dist_doc_dir}"/>
		<mkdir dir="${core_dist_dir}/src"/>
		<mkdir dir="${core_dist_dir}/plugins"/>
	</target>

	<!--
	==================================================================
	Compile the framework classes.
	No parameters.
	==================================================================
	-->
	<target name="compile_fw" depends="setup">
		<echo message="---------------- Framework ----------------"/>
		<javac	srcdir="fw/src"
				destdir="${core_obj_dir}"
				deprecation="${deprecation}"
				debug="${debug}"
				optimize="${optimize}"
				includeJavaRuntime="yes">
			<classpath>
				<fileset dir="fw/lib">
					<include name="**/*.*"/>
				</fileset>
			</classpath>
		</javac>
			
		<copy todir="${core_obj_dir}" >
			<fileset dir="fw/src" >
				<include name="**/*.gif"/>
				<include name="**/*.jpg"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.html"/>
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
			</fileset>
		</copy>
			
		<copy todir="${core_dist_lib_dir}">
			<fileset dir="fw/lib">
				<include name="**/*.*"/>
			</fileset>
		</copy>

		<jar jarfile="${core_dist_lib_dir}/fw.jar" compress="false">
			<fileset dir="${core_obj_dir}">
				<include name="com/**/*.*"/>
				<include name="net/sourceforge/squirrel_sql/fw/**/*.*"/>
			</fileset>
		</jar>
	</target>

	<!--
	==================================================================
	Compile the client app classes.
	No parameters.
	==================================================================
	-->
	<target name="compile_app" depends="compile_fw">
		<echo message="---------------- ${name} ${version} ----------------"/>
		<javac	srcdir="app/src"
				destdir="${core_obj_dir}"
				deprecation="${deprecation}"
				debug="${debug}"
				optimize="${optimize}"
				includeJavaRuntime="yes">
			<classpath>
				<fileset dir="fw/lib">
					<include name="**/*.*"/>
				</fileset>
			</classpath>
		</javac>
		<copy todir="${core_obj_dir}" >
			<fileset dir="app/src" >
				<include name="**/*.gif"/>
				<include name="**/*.jpg"/>
				<include name="**/*.jpeg"/>
				<include name="**/*.png"/>
				<include name="**/*.html"/>
				<include name="**/*.xml"/>
				<include name="**/*.properties"/>
				<include name="**/*.txt"/>
			</fileset>
		</copy>

		<jar jarfile="${core_dist_lib_dir}/${name}.jar" compress="false"
				manifest="build/MANIFEST.MF">
			<fileset dir="${core_obj_dir}">
				<include name="net/sourceforge/squirrel_sql/client/**/*.*"/>
			</fileset>
		</jar>

		<copy todir="${core_dist_dir}" >
			<fileset dir="app/cmd" >
				<include name="**/*.*"/>
			</fileset>
		</copy>
		<chmod file="${core_dist_dir}/*.sh" perm="ugo+rx"/>

		<copy todir="${core_dist_doc_dir}" >
			<fileset dir="doc" >
				<include name="**/*.*"/>
			</fileset>
		</copy>

		<copy todir="${core_dist_dir}/icons" >
			<fileset dir="app/icons" >
				<include name="**/*.*"/>
			</fileset>
		</copy>

		<echo message="Unzip your plugins here" 
			file="${core_dist_dir}/plugins/readme.txt">
		</echo>
	</target>

	<!--
	==================================================================
	Build the JavaDoc
	No parameters
	==================================================================
	-->
	<target name="javadoc">
		<mkdir dir="${basedir}/../javadoc"/>
		<javadoc	packagenames="net.sourceforge.squirrel_sql.*"
					sourcepath="${basedir}/app/src;${basedir}/fw/src"
					destdir="${basedir}/../javadoc">
			<classpath>
				<fileset dir="fw/lib">
					<include name="**/*.*"/>
				</fileset>
			</classpath>
		</javadoc>
	</target>

	<!--
	==================================================================
	Compile the plugins.
	No parameters.
	==================================================================
	-->
	<target name="compile_plugins" depends="compile_app">
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="dataimport"/>
		</antcall> -->
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="dbinfo"/>
		</antcall>-->
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="favs"/>
		</antcall>-->
		<antcall target="build_plugin">
			<param name="p_internal_name" value="jedit"/>
		</antcall>
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="laf"/>
		</antcall> -->
		<antcall target="build_plugin">
			<param name="p_internal_name" value="mysql"/>
		</antcall>
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="oracle"/>
		</antcall> -->
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="sessionscript"/>
		</antcall> -->
<!--		<antcall target="build_plugin">
			<param name="p_internal_name" value="sqlscript"/>
		</antcall> -->
		<antcall target="build_plugin">
			<param name="p_internal_name" value="sqlval"/>
		</antcall>
	</target>

	<!--
	==================================================================
	Jar up the FW and client source.
	No parameters.
	==================================================================
	-->
	<target name="jar_source" depends="setup">
		<jar jarfile="${core_dist_dir}/src/fw-src.jar" compress="false">
			<fileset dir="fw/src">
				<include name="**/*.*"/>
			</fileset>
		</jar>

		<jar jarfile="${core_dist_dir}/src/client-src.jar" compress="false">
			<fileset dir="app/src">
				<include name="**/*.*"/>
			</fileset>
		</jar>

		<jar jarfile="${core_dist_dir}/src/build.jar" compress="false">
			<fileset dir="build">
				<include name="**/*.*"/>
				<exclude name="test.jar"/>
			</fileset>
		</jar>

		<copy todir="${core_dist_dir}/src" >
			<fileset dir="." >
				<include name="build.xml"/>
				<include name="izpack.bat"/>
				<include name="izpack.xml"/>
			</fileset>
		</copy>

		<zip zipfile="${dist_dir}/${name}-src-${version}.zip" compress="true">
			<fileset dir="${core_dist_dir}/src">
				<include name="**/*.*"/>
			</fileset>
		</zip>

		<tar tarfile="${dist_dir}/${name}-src-${version}.tar">
			<tarfileset dir="${core_dist_dir}/src">
				<include name="**/*.*"/>
			</tarfileset>
		</tar>
		<gzip zipfile="${dist_dir}/${name}-src-${version}.tar.gz"
			src="${dist_dir}/${name}-src-${version}.tar">
		</gzip>
		<delete file="${dist_dir}/${name}-src-${version}.tar"/>

	</target>
	
	<!--
	==================================================================
	Make the distribution.
	No parameters.
	==================================================================
	-->
	<target name="make_dist" depends="compile_app,jar_source">
	</target>

	<!--
	==================================================================
	Clean up.
	No parameters.
	==================================================================
	-->
	<target name="clean" depends="init">
		<delete includeEmptyDirs="true">
			<fileset dir="." includes="**/*~" defaultexcludes="no"/>
			<fileset dir="." includes="**/#*#" defaultexcludes="no"/>
			<fileset dir=".">
				<include name="**/*.class"/>
				<include name="**/*.bak"/>
			</fileset>
		</delete>
		<delete includeEmptyDirs="true">
			<fileset dir="${dist_dir}">
				<exclude name="*.jar"/>
				<exclude name="*.zip"/>
				<exclude name="*.gz"/>
			</fileset>
		</delete>
	</target>

	<!--
	==================================================================
	Internal Target.
	Build a plugin.
	p_internal_name		- internal name of plugin to be build.
	==================================================================
	-->
	<target name="build_plugin">
		<property name="lcl_this_plugin_src_dir" value="${plugins_src_dir}/${p_internal_name}"/>
		<property name="lcl_this_plugin_dist_dir" value="${plugins_dist_dir}/${p_internal_name}"/>
		
		<mkdir dir="${lcl_this_plugin_dist_dir}/work"/>
		<mkdir dir="${lcl_this_plugin_dist_dir}/dist/${p_internal_name}"/>
		<ant	inheritAll="false" dir="${lcl_this_plugin_src_dir}"
				antfile="${plugins_src_dir}/${p_internal_name}/${plugin_build_file_name}"
				target="${plugin_build_target_name}">
			<property name="p_plugin.work_dir" value="${lcl_this_plugin_dist_dir}/work"/>
			<property name="p_plugin.dist_dir" value="${lcl_this_plugin_dist_dir}/dist"/>
			<property name="p_plugin.core_libs_dir" value="${core_dist_lib_dir}"/>
		</ant>

		<zip zipfile="${dist_dir}/${p_internal_name}.zip" compress="true">
			<fileset dir="${lcl_this_plugin_dist_dir}/dist">
				<include name="**/*.*"/>
			</fileset>
		</zip>

		<tar tarfile="${dist_dir}/${p_internal_name}.tar">
			<tarfileset dir="${lcl_this_plugin_dist_dir}/dist">
				<include name="**/*.*"/>
			</tarfileset>
		</tar>
		<gzip zipfile="${dist_dir}/${p_internal_name}.tar.gz"
			src="${dist_dir}/${p_internal_name}.tar">
		</gzip>
		<delete file="${dist_dir}/${p_internal_name}.tar"/>
		
	</target>

	<target name="make_jws" depends="compile_app">
		<echo message="${core_jws_dir}"/>
		<copy todir="${core_jws_dir}">
			<fileset dir="${core_dist_lib_dir}">
				<include name="**/*.jar"/>
			</fileset>
		</copy>
		<copy file="doc/images/logo.jpg" todir="${core_jws_dir}"/>
		<copy file="web-site/jws/squirrel.jnlp" todir="${core_jws_dir}"/>
<!-- TODO: Get latest version of ant and install on rory -->
<!--		<signjar alias="squirrel" storepass="password" keystore="build/keystore"> -->
<!--			<fileset dir="${core_jws_dir}"> -->
<!--				<include name="**/*.jar"/> -->
<!--			</fileset> -->
<!--		</signjar> -->
		<signjar	alias="squirrel" storepass="password" keystore="build/keystore"
					jar="${core_jws_dir}/fw.jar">
		</signjar>
		<signjar	alias="squirrel" storepass="password" keystore="build/keystore"
					jar="${core_jws_dir}/log4j.jar">
		</signjar>
		<signjar	alias="squirrel" storepass="password" keystore="build/keystore"
					jar="${core_jws_dir}/nanoxml-2.1.jar">
		</signjar>
		<signjar	alias="squirrel" storepass="password" keystore="build/keystore"
					jar="${core_jws_dir}/squirrel-sql.jar">
		</signjar>
	</target>

</project>
